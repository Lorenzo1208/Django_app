# Generated by Django 4.2.5 on 2023-09-21 08:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('DOCTOR', 'Médecin'), ('PATIENT', 'Patient')], default='PATIENT', max_length=7)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StressEvaluationForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('irritabilite', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('sentiments_depressifs', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('bouche_seche_ou_gorge_seche', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('actions_ou_gestes_impulsifs', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('grincement_des_dents', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('difficulte_a_rester_assis', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('cauchemars', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('diarrhee', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('attaques_verbales_envers_quelquun', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('hauts_et_bas_emotifs', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('grande_envie_de_pleurer', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('grande_envie_de_fuir', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('grande_envie_de_faire_mal', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('pensees_embrouillees', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('debit_plus_rapide', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('fatigue_ou_lourdeur_generalisees', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('sentiment_detre_surchargé', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('sentiment_detre_emotivement_fragile', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('sentiment_de_tristesse', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('sentiment_danxiete', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('tension_emotionnelle', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('hostilite_envers_les_autres', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('tremblements_ou_gestes_nerveux', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('begaiements_ou_hesitations_verbales', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('incapacite_ou_difficulte_a_se_concentrer', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('difficulte_a_organiser_ses_pensees', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('difficulte_a_dormir_toute_la_nuit_sans_se_reveiller', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('besoin_frequent_duriner', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('maux_destomac_ou_difficultes_a_digerer', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('geste_ou_sentiment_dimpatience', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('maux_de_tete', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('douleurs_au_dos_ou_a_la_nuque', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('perte_ou_gain_dappetit', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('perte_dinteret_pour_le_sexe', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('oublis_frequents', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('douleurs_ou_serrements_a_la_poitrine', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('conflits_significatifs_avec_les_autres', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('difficulte_a_se_lever_apres_le_sommeil', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('sentiment_que_les_choses_sont_hors_de_controle', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('mouvements_de_retrait_disolement', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('difficulte_a_sendormir', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('difficulte_a_se_remettre_dun_evenement_contrariant', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('mains_moites', models.IntegerField(choices=[(0, '0'), (1, '1'), (5, '5'), (10, '10')], default=0)),
                ('total_impact_du_stress_dans_votre_vie_actuelle', models.IntegerField(blank=True, default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientDailyForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('poids', models.FloatField(validators=[django.core.validators.MinValueValidator(30.0), django.core.validators.MaxValueValidator(300.0)])),
                ('tour_de_taille', models.IntegerField(validators=[django.core.validators.MinValueValidator(40), django.core.validators.MaxValueValidator(200)])),
                ('frequence_cardiaque', models.IntegerField(validators=[django.core.validators.MinValueValidator(40), django.core.validators.MaxValueValidator(200)])),
                ('tension_arterielle_matin_systolique', models.IntegerField(validators=[django.core.validators.MinValueValidator(80), django.core.validators.MaxValueValidator(200)])),
                ('tension_arterielle_soir_systolique', models.IntegerField(validators=[django.core.validators.MinValueValidator(80), django.core.validators.MaxValueValidator(200)])),
                ('tension_arterielle_matin_diastolique', models.IntegerField(validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(150)])),
                ('tension_arterielle_soir_diastolique', models.IntegerField(validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(150)])),
                ('symptomes_cardiovasculaires', models.TextField()),
                ('nombre_medicaments_jour', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('oublie_medicament_matin', models.BooleanField(null=True)),
                ('oublie_medicament_soir', models.BooleanField(null=True)),
                ('effets_secondaires', models.BooleanField(null=True)),
                ('symptomes_particuliers', models.BooleanField(null=True)),
                ('description_effets_symptomes', models.TextField()),
                ('consommation_alcool', models.BooleanField(null=True)),
                ('grignotage_sucre', models.BooleanField(null=True)),
                ('grignotage_sale', models.BooleanField(null=True)),
                ('nombre_repas_jour', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('quantite_eau', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('quantite_alcool', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('activite_physique', models.BooleanField(null=True)),
                ('nature_activite_physique', models.CharField(max_length=100, null=True)),
                ('duree_activite_physique', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('presence_dyspnee', models.BooleanField(null=True)),
                ('presence_oedeme', models.BooleanField(null=True)),
                ('presence_episode_infectieux', models.BooleanField(null=True)),
                ('presence_fievre', models.BooleanField(null=True)),
                ('presence_palpitation', models.BooleanField(null=True)),
                ('presence_douleur_thoracique', models.BooleanField(null=True)),
                ('presence_malaise', models.BooleanField(null=True)),
                ('heure_debut_palpitations', models.TimeField(null=True)),
                ('duree_palpitations', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('heure_debut_douleurs_thoraciques', models.TimeField(null=True)),
                ('duree_douleurs_thoraciques', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('heure_debut_malaises', models.TimeField(null=True)),
                ('duree_malaises', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('specialty', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_conducted', models.DateTimeField(auto_now_add=True)),
                ('results', models.TextField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_analyses', to='app.doctorprofile')),
            ],
        ),
    ]
